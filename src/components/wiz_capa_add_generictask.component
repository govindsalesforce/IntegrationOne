<apex:component controller="CAPA" extensions="Component_Handler,QC_custom_settings"> 
    <apex:attribute name="CAPA" type="CAPA__c" required="true" description="CAPA"/>
    <apex:attribute name="capaOpenTaskSequence" type="String" description="Open Capa Task Sequence" default="0"/>
    <div class="modal fade" id="addtask"  role="dialog" aria-labelledby="myModalLabel" >
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onClick="clearGenTasks();"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Add Task</h4>


                </div>
                <div class="modal-body">
                    <div class="col-md-12 col-sm-12">
                        <div class="form-group text-right">
                            <button type="button" id='creategentask' class="btn btn-primary " onClick="genTask_add_genAdhocTask($('.dialogTask'),'genDiv')">Add Adhoc Task</button>
                        </div>
                        <div class="col-md-12" style="height: 500px; overflow: auto;"> 
                              <!--<c:wiz_addadhoctask divfrom="dialogTask" divId="genDiv" seqFieldId="genTaskseq" userFieldId="genTaskusr" allowDaysFieldId="genTaskAllowed_Days__c" dueDateFieldId="genTaskDue_Date__c" taskTitle="genTasktitle" typeOfUser="CAPA_Task_Owner"></c:wiz_addadhoctask>-->
                            <div class="dialogTask" id="dialogTask">
                           
                                 <c:wiz_addadhoctask divfrom="dialogTask"  divId="genDiv" currentpagetaskseq="{!capaOpenTaskSequence}"  seqFieldId="genTaskseq" userFieldId="genTaskusr" allowDaysFieldId="genTaskAllowed_Days__c" dueDateFieldId="genTaskDue_Date__c" taskTitle="genTasktitle" typeOfUser="CAPA_Task_Owner" />
                                
                            </div> 
                            <div id="capaWorkflowPanel" >
                                <apex:outputPanel rendered="{!isInvTaskPresent}">
                                <c:wiz_task task="geninvestigation" taskTitle="Investigation" onCheckBoxChange="callCAPAGenPane" seqFieldId="gencapaInv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Sequence__c" seqInitValue="{!IF(ISBLANK(invTask.Sequence_Position__c),10,invTask.Sequence_Position__c)}" userFieldId="gencapaInvUser" userInitValue="{value:'{!JSENCODE(invTask.OwnerId)}', label:'{!JSENCODE(invTask.Owner.Name)}'}" allowDaysFieldId="geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c" allowDaysInitValue="{!invTask.Allowed_Days__c}" dueDateFieldId="geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Due_Date__c" dueDateInitValue="{!invTask.Due_Date__c}"  ncCrDt="{!CAPA.CreatedDate}"  isTaskChecked="{!hasInvTask}" disabled="{!OR(CAPA.Is_In_Works__c,CAPA.Closed__c)}" typeoftaskowner="CAPA_Task_Owner" isSeqDisabled="false">   </c:wiz_task>
                               </apex:outputPanel> 
                                 <apex:outputPanel rendered="{!isImplTaskPresent}">
                                <c:wiz_task task="genimplementation" taskTitle="Implementation" onCheckBoxChange="callCAPAGenPane" seqFieldId="gencapaImpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Sequence__c" seqInitValue="{!IF(ISBLANK(implTask.Sequence_Position__c),20,implTask.Sequence_Position__c)}" userFieldId="gencapaImplUser" userInitValue="{value:'{!JSENCODE(implTask.OwnerId)}', label:'{!JSENCODE(implTask.Owner.Name)}'}" allowDaysFieldId="genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c" allowDaysInitValue="{!implTask.Allowed_Days__c}" dueDateFieldId="genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Due_Date__c" dueDateInitValue="{!implTask.Due_Date__c}" ncCrDt="{!CAPA.CreatedDate}"  isTaskChecked="{!hasImplTask}" disabled="{!OR(CAPA.Is_In_Works__c,CAPA.Closed__c)}" typeoftaskowner="CAPA_Task_Owner" isSeqDisabled="true">  </c:wiz_task>
                                 </apex:outputPanel>
                               <apex:outputPanel rendered="{!isErPresent}">
                                <c:wiz_task task="geneffectivenessReview" taskTitle="EffectivenessReview" onCheckBoxChange="callCAPAGenPane" seqFieldId="gencapaER{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Sequence__c" seqInitValue="{!IF(ISBLANK(erTask.Sequence_Position__c),30,erTask.Sequence_Position__c)}" userFieldId="gencapaERUser" userInitValue="{value:'{!JSENCODE(erTask.OwnerId)}', label:'{!JSENCODE(erTask.Owner.Name)}'}" allowDaysFieldId="gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c" allowDaysInitValue="{!erTask.Allowed_Days__c}" dueDateFieldId="gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Due_Date__c"  dueDateInitValue="{!erTask.Due_Date__c}" ncCrDt="{!CAPA.CreatedDate}" isTaskChecked="{!hasERTask}" disabled="{!OR(CAPA.Is_In_Works__c,CAPA.Closed__c)}" typeoftaskowner="CAPA_Task_Owner" isSeqDisabled="true"> </c:wiz_task>
                                </apex:outputPanel>
                            </div>    
                        </div>
                        <apex:outputPanel layout="none" rendered="{!DigitalSignatureNeeded}">
                             <div class="col-md-6">                                                                                
                                <div class="form-group">
                                    <label for="UserName"><span class="mandatory">*</span> User Name:</label>
                                    <br/>
                                    <input class="form-control" type="text" id="uname_gentask" />
                                    <div class="help-block with-errors" id="uname_gentask_error" style="color: red;"></div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="exampleInputEmail1"><span class="mandatory">*</span> Password:</label>
                                    <input class="form-control" type="password" id="pwd_gentask" />
                                     <div class="help-block with-errors" id="pwd_gentask_error" style="color: red;"></div>
                                </div>
                            </div>
                        </apex:outputPanel> 
                    </div>
                    <div class="clearfix"></div>
                    <div class="modal-footer">
                        <button type="button" id="resetBtn_gentask" class="btn btn-default" data-dismiss="modal" onClick="clearGenTasks();">Cancel</button>
                        <button id="adhocSave" type="button" class="btn btn-primary" onClick="verifygentaskData()">Submit</button>
                    </div>
                </div>    
            </div>
        </div>
    </div>
    <script>
     var genimpelseq = [];
   $(document).ready(function() {
    genTask_add_genAdhocTask($('.dialogTask'),'genDiv');
    
    });
    
      //CUSTOM VALIDATION FOR WORKFLOW TASKS
     function isvalidateInvestigationUser(){
    if($("#gencapaInvUser").val()=='Select ....'|| $("#gencapaInvUser").val() == null || $("#gencapaInvUser").val() ==''){
            
            $('#gencapaInvUser_error').html( "<p><font color='red'>This field is required</font></p>");
            return false;
            }else{
                return true
                }
        }
    function isvalidateImplementationUser(){
        if($("#gencapaImplUser").val()=='Select ....'|| $("#gencapaImplUser").val() == null || $("#gencapaImplUser").val() ==''){
            
            $('#gencapaImplUser_error').html( "<p><font color='red'>This field is required</font></p>");
            return false;
            }else{
                return true
                }
        } 
    
     function isvalidateEffecticenessUser(){
        if($("#gencapaERUser").val()=='Select ....'|| $("#gencapaERUser").val() == null || $("#gencapaERUser").val() ==''){
            
            $('#gencapaERUser_error').html( "<p><font color='red'>This field is required</font></p>");
            return false;
            }else{
                return true
                }
        } 
     function isvalidateInvestigationAlwdys(){
        if($("#geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val() == null || $("#geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val()==' '||$("#geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val() == 0){
            $('#geninvAllowed_Days__c_error').html( "<p><font color='red'>This field is required</font></p>");
            return false;
            }else{
                return true
                }
        }
    function isvalidateImplementationAlwdys(){
        if($("#genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val() == null || $("#genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val() == ' ' ||$("#genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val()==0){
          $('#genimplAllowed_Days__c_error').html( "<p><font color='red'>This field is required</font></p>");
            return false
             }else{
                return true
                }
        }
     function isvalidateEffecticenessAlwdys(){
        if($("#gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val() == null || $("#gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c") == ' ' ||$("#gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val()==0){
          $('#generAllowed_Days__c_error').html( "<p><font color='red'>This field is required</font></p>");
            return false
             }else{
                return true
                }
        }
    //CUSTOM VALIDATION END
     function resetWorkflowTasks(){       
       
        $('#gencapaInvUser_error').empty();
        $('#gencapaImplUser_error').empty();      
        $('#gencapaERUser_error').empty();
        $('#geninvAllowed_Days__c_error').empty();
        $('#genimplAllowed_Days__c_error').empty();
        $('#generAllowed_Days__c_error').empty();
         
        }
    
    function validateAndCollectData(){
        var tasks={},dueDates=[],adhocTasks=[],invDueDate,implDueDate,erDueDate,result;
        var hasValuesInInv=true;
        var hasValuesInImpl=true;
        var hasValuesInEr=true;
        var hasAdhoctasks=false;
         adhocTasks = genTask_dialogTask_getAllAdhoctasks();
         console.log('adhoc tasks from addgen task--'+adhocTasks.length);
         console.log('check for adhoc NO tasks--'+($('.dialogTask #genDiv_cont').length==1 && adhocTasks.length ==0 ));
         console.log('check for if adhoc tasks--'+($('.dialogTask #genDiv_cont').length>1 && adhocTasks.length > 0));
         if(($('.dialogTask #genDiv_cont').length==1 && adhocTasks.length ==0 )){
             hasAdhoctasks =true;
         }else if(($('.dialogTask #genDiv_cont').length>1 && adhocTasks.length > 0)){
             hasAdhoctasks =true; 
         }
         
         console.log(adhocTasks);
          resetWorkflowTasks();
         if(!isValid){
             $('#adhocSave').removeAttr("disabled");
             $('#resetBtn_gentask').removeAttr("disabled");
             $('#creategentask').removeAttr("disabled");
            }
         
         console.log('$("#geninvestigation")----Checked value-->'+$("#geninvestigation").is(':checked'));
         if($("#geninvestigation").is(':checked')){
             console.log('isvalidateInvestigationUser -'+isvalidateInvestigationUser()+' isvalidateInvestigationAlwdys -  '+isvalidateInvestigationAlwdys()+' result  -'+(isvalidateInvestigationUser() && isvalidateInvestigationAlwdys()));   
            if((isvalidateInvestigationUser() && isvalidateInvestigationAlwdys())){
                
                         invDueDate=new Date($("#geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Due_Date__c_GRDATE").val());
                         tasks['Investigation']=[$("#gencapaInv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Sequence__c").val(),$("#gencapaInvUser").val(),$("#geninv{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val(),(invDueDate.getMonth()+1)+"/"+invDueDate.getDate()+"/"+invDueDate.getFullYear()]
                         dueDates.push(invDueDate);    
                  }else{
                      hasValuesInInv =false;
                        } 
        }
         console.log('genimplementation----->'+$("#genimplementation").is(':checked'));
        if($("#genimplementation").is(':checked')){
            console.log('isvalidateImplementationUser -'+isvalidateImplementationUser()+' isvalidateImplementationAlwdys -  '+isvalidateImplementationAlwdys()+' result  -'+(isvalidateImplementationUser() && isvalidateImplementationAlwdys()));  
            if((isvalidateImplementationUser() && isvalidateImplementationAlwdys())){
                         implDueDate=new Date($("#genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Due_Date__c_GRDATE").val());
                         tasks['Implementation']=[$("#gencapaImpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Sequence__c").val(),$("#gencapaImplUser").val(),$("#genimpl{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val(),(implDueDate.getMonth()+1)+"/"+implDueDate.getDate()+"/"+implDueDate.getFullYear()]
                         dueDates.push(implDueDate);
                    }else{
                      hasValuesInImpl =false;
                        } 
        }
         
         console.log('geneffectivenessReview-------->'+$("#geneffectivenessReview").is(':checked'));
       if($("#geneffectivenessReview").is(':checked')){
            console.log('isvalidateEffecticenessUser -'+isvalidateEffecticenessUser()+' isvalidateEffecticenessAlwdys -  '+isvalidateEffecticenessAlwdys()+' result  -'+(isvalidateEffecticenessUser() && isvalidateEffecticenessUser()));  
            if((isvalidateEffecticenessUser() && isvalidateEffecticenessAlwdys())){
                         erDueDate=new Date($("#gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Due_Date__c_GRDATE").val());
                         tasks['EffectivenessReview']=[$("#gencapaER{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Sequence__c").val(),$("#gencapaERUser").val(),$("#gener{!IF(NOT(ISBLANK(Prefix)),Prefix+'__','')}Allowed_Days__c").val(),(erDueDate.getMonth()+1)+"/"+erDueDate.getDate()+"/"+erDueDate.getFullYear()]
                         dueDates.push(erDueDate);
                    }else{
                      hasValuesInEr =false;
                        } 
        }
         
        console.log( hasValuesInInv && hasValuesInImpl && hasAdhoctasks + 'result -'+(hasValuesInInv && hasValuesInImpl &&hasValuesInEr&& hasAdhoctasks));
         result = (hasValuesInInv && hasValuesInImpl &&hasValuesInEr&& hasAdhoctasks);
         console.log('result------>'+result);
        return {
            adhoctasks:adhocTasks,
            result:result,
        	tasks:tasks
       	 };
        
        }
    
    //User Validation
     function verifygentaskData(){
        var taskdata = validateAndCollectData();
         console.log(taskdata);
         console.log('inside task verify adhocTasks'+taskdata.adhoctasks);
         console.log('inside task verify adhocTasks'+taskdata.tasks);
          console.log('inside task verify adhocTasks'+taskdata.result);
          
         var tasks=taskdata["tasks"];
         console.log(tasks);
         var adhoctasks =taskdata["adhoctasks"];
         console.log(adhoctasks);
         var result = taskdata["result"];
         console.log(result);
        $('#adhocSave').attr('disabled', true);
        $('#resetBtn_gentask').attr('disabled',true);
        $('#creategentask').attr('disabled',true);
         if({!DigitalSignatureNeeded}){
          console.log('digital signature needed');
             var uname=$("#uname_gentask").val();
            if(!uname){
                  //alert('Please enter username');
               $("#uname_gentask_error").html( "<p>Please enter username</p>");
                 $('#adhocSave').attr('disabled', false);
                 $('#resetBtn_gentask').attr('disabled',false);
                  $('#creategentask').attr('disabled',false);
                 return false;
               }
             if(uname!= '{!$User.Username}'){
                 // alert('Invalid Username')
                 $("#uname_gentask_error").html( "<p>Invalid Username</p>");
                 $('#adhocSave').attr('disabled', false);
                  $('#resetBtn_gentask').attr('disabled',false);
                  $('#creategentask').attr('disabled',false);
                  return false;
               }
             var pwd=$("#pwd_gentask").val();
              if(!pwd){
                  // alert('Please enter password..')
                   $("#pwd_gentask_error").html( "<p>Please enter password..</p>");
                   $('#adhocSave').attr('disabled', false);
                   $('#resetBtn_gentask').attr('disabled',false);
                   $('#creategentask').attr('disabled',false);
                   return false;
               }
             Visualforce.remoting.Manager.invokeAction(
                   // @RemoteAction
                   '{!$RemoteAction.Component_Handler.doVerify}',pwd,function(result, event){
                        if(event.status){
                            if(result){
                                createAllAdhocTasks(tasks,adhoctasks);
                            }else{
                                $("#pwd_gentask_error").html( "<p>Unable to verify password!</p>");
                                console.log('fields missing');
                            }
                        }
                   },
                 {escape: true}
             );
             
         }else{ 
             
             if(result){
                 createAllAdhocTasks(tasks,adhoctasks);
             }else{
                 console.log('fields missing');
             }
             $('#adhocSave').attr('disabled', false);
             $('#resetBtn_gentask').attr('disabled',false);
             $('#creategentask').attr('disabled',false);
             }
        }
    
    
     function createAllAdhocTasks(tasks,adhoctasks){
         //  alert('hello from create');
       
       console.log('adhoctasks in create adhoc func==>'+adhoctasks);
        console.log('in create adhoc func-->'+tasks);
            //Remote Function 
            
           Visualforce.remoting.Manager.invokeAction(
               // @RemoteAction
               '{!$RemoteAction.CAPA.createCAPATasks}',adhoctasks,
               
                tasks,'{!CAPA.Id}',true,false,true,
               
               // Callback
               function(result, event){
                   //  console.log('createCAPATasks   result  '+result);
                   //alert('result  closure task id   '+result['Closure']);
                  
                    location.reload();
                  
               },
               // Don't know, couldn't find docs
               {escape: true}
           );
            
            
            
            
     
     }
    
    function clearGenTasks(){
        var len = $('.dialogTask .genDiv_task').length;
        console.log(len);
        for(var i=len;i>0;i--){
           $('.dialogTask #tsk_'+i).parent().remove();
            }
        $('#genTasktitle_tsk_0').val('');
        $('#genTaskusr_tsk_0').val('');
         $('#adhocSave').removeAttr("disabled");
         $('#resetBtn_gentask').removeAttr("disabled");
         $('#creategentask').removeAttr("disabled");
          $("#uname_gentask_error").empty();
        $('#uname_gentask').val('');
        $("#pwd_gentask_error").empty();
         $('#pwd_gentask').val('');
         
         genTask_resetgenform();
    }
    </script>
</apex:component>